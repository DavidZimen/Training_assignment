package sk.sb.training_assignment.entities;

import com.fasterxml.jackson.annotation.JsonManagedReference;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;

/**
 * Entity class representing user.
 * Getters and setters automatically generated by Project Lombok.
 * @author <a href="https://github.com/DavidZimen">DÃ¡vic Zimen</a>
 */
@Entity
@Table(name = "TA_USER")
@Getter @Setter @NoArgsConstructor
public class User implements Serializable {
    /**
     * Unique identifier for the user.
     * Automatically generated by Hibernate.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", nullable = false)
    private Long id;

    /**
     * Personal number of the user.
     * Con not be updated after user is created.
     * Is automatically generated.
     */
    @Column(name = "personal_number", insertable = false, updatable = false)
    private Long personalNumber;

    /**
     * User's name.
     */
    @Column(name = "name", nullable = false)
    private String name;

    /**
     * User's surname.
     */
    @Column(name = "surname", nullable = false)
    private String surname;

    /**
     * User's date of birth.
     */
    @Column(name = "birth_date", nullable = false)
    @Temporal(TemporalType.DATE)
    private Date birthDate;

    /**
     * User's address which is its own entity.
     */
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "address_id", referencedColumnName = "id")
    @JsonManagedReference
    private Address address;

    /**
     * Version of the entity in the database.
     * Used for checking if the entity has been changed while updating.
     */
    @Version
    @Column(name = "version", nullable = false)
    private int version;

// CONSTRUCTORS

    /**
     * Basic constructor to create an object with required attributes.
     * @param pName - name of the user
     * @param pSurname - surname of the user
     * @param pBirthDate - birthdate of the user
     * @param address - address id of given user
     */
    public User(String pName, String pSurname, Date pBirthDate, Address address) {
        this.name = pName;
        this.surname = pSurname;
        this.birthDate = pBirthDate;
        this.address = address;
    }
}